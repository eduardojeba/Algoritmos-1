// lab1.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <iostream>
#include "conio.h"
using namespace std;
bool verifEsPrimo(int n)
{
  int i;
  bool k=true;
    for(i=2;i<=n;i++)
     {
        if(n%i==0){
        k=false;
        }
     }
   return(k);
}
int obtenerNesimoPrimo(int n)
{
	int c=0,cp=0;
	while(n>0)
	{
		c++;
		if(verifEsPrimo(c) == true)
		{
			cp++;
		}
	}
	return(c);
}
void cargar(int vec[],int n)
{
	int i;
	for(i=0;i<n;i++)
	{
		cout<<"introducir elementos["<<i<<"] :";
		cin>>vec[i];
	}
}
void mostrar(int vec[],int n)
{
	int i;
	cout<<endl<< "\n los elementos del vector son: ";
	for(i=0;i<n;i++)
	{
		cout<<endl<< "vec["<<i<<"]:"<< vec[i];

	}
}
int sumaElementos(int vec[],int n)
{
	int i,s=0;
	for(i=0;i<n;i++)
	{
		s = s + vec[i];
	}
	return(s);
}
int sumaElemPrimos(int vec[],int n)
{
	int i,s=0;
	for(i=0;i<n;i++)
	{
		if(verifEsPrimo(vec[i]))
		{
			s = s + vec[i];
		}
	}
	return(s);
}
void cargarPrimosInv(int vec[],int n)
{
	int i;
	for(i=0;i<n;i++)
	{
		vec[i]=obtenerNesimoPrimo(n-1);
	}
}
void eliminarPrimos(int vec[],int &n)
{
	int i,j;
	for(i=0;i<n;i++)
	{
		if(verifEsPrimo(vec[i])==true)
		{
			for(j=i;j<n-1;j++)
			{
				vec[j]=vec[j+1];
			}
			n--;
			i--;
		}
	}
}
void ordenarAscendente(int vec[],int n)
{
	int i;
    for(i=0;i<n;i++)
	{
		if(vec[i]
	}
}
int main()
{
   int V[30],nroElem=0,opcion;
    
  do{
      cout<<endl<<endl<<"***MENU***";
      cout<<endl<<"1.- Cargar vector.";
      cout<<endl<<"2.- Mostrar vector.";
      cout<<endl<<"3.- Suma elementos del vector.";
	  cout<<endl<<"4.- Suma elementos Primos del vector.";
	  cout<<endl<<"5.- Cargar vector Primos Descendentes.";
	  cout<<endl<<"6.- Eliminar numeros Primos.";
      cout<<endl<<"7.- Ordenar de forma ascendente.";
      cout<<endl<<"0.- Salir";
      cout<<endl<<"Seleccionar opcion : ";
      cin>>opcion;
      switch(opcion)
      {
	     case 1: cout<<"introducir el numero de elementos:";
		         cin>>nroElem;
			     cargar(V,nroElem);
                 break;
         case 2: mostrar(V,nroElem);
                 break;
		 case 3: cout<<"\nLa suma de elementos es: "<<sumaElementos(V,nroElem);
                 break;
		 case 4: cout<<"\nLa suma de elementos primos es:"<<sumaElemPrimos(V,nroElem);
                 break;
		 case 5: cout<<"introducir numero de elementos: ";
			     cin>>nroElem;
			     cargarPrimosInv(V,nroElem);
			     break;
		 case 6: cout<<"el nuevo vector es: "<<eliminarPrimos(V,nroElem);
			     break;
		 case 7: cout<<"el vector ordenado es: "<<ordenarAscendente(V,nroElem);
			     break;
	   }
   }while(opcion !=0);
   return(1);
}
